<Project>

  <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
    <PackageReference
      Include="Microsoft.NETFramework.ReferenceAssemblies"
      PrivateAssets="all"
      Version="1.0.2"
    />
  </ItemGroup>

  <Target Name="AddGeneratedFile" BeforeTargets="AfterClean;BeforeBuild;BeforeCompile;CoreCompile;BeforeResolveReference"
      Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)BepPluginInfo.cs">

    <PropertyGroup>
      <BepPluginGuid Condition="'$(BepPluginGuid)' == ''">$(AssemblyName)</BepPluginGuid>
      <BepPluginName Condition="'$(BepPluginName)' == ''">$(Product)</BepPluginName>
      <BepPluginTsTeam Condition  ="'$(BepPluginTsTeam)' == ''">$(TsTeam)</BepPluginTsTeam>
      <BepPluginVersion Condition="'$(BepPluginVersion)' == ''">$(Version)</BepPluginVersion>
      <GeneratedText><![CDATA[
internal static class BepPluginInfo
{
  public const string PLUGIN_GUID = "$(BepPluginGuid)"%3B
  public const string PLUGIN_NAME = "$(BepPluginName)"%3B
  public const string PLUGIN_TS_TEAM = "$(BepPluginTsTeam)"%3B
  public const string PLUGIN_VERSION = "$(BepPluginVersion)"%3B
}
]]></GeneratedText>
      <GeneratedFilePath>$(IntermediateOutputPath)BepPluginInfo.cs</GeneratedFilePath>
    </PropertyGroup>

    <ItemGroup>
      <Compile Include="$(GeneratedFilePath)" />
      <FileWrites Include="$(GeneratedFilePath)" />
    </ItemGroup>

    <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)"
        WriteOnlyWhenDifferent="true" Overwrite="true" />

  </Target>

  <Target Name="CleanThunderstoreArtifacts" AfterTargets="Clean;" Condition="'$(SolutionDir)' == '$(MSBuildThisFileDirectory)'">
    <RemoveDir Directories="$(SolutionDir)\artifacts\tspublish\build" />
    <MakeDir Directories="$(SolutionDir)\artifacts\tspublish\build" />
    <RemoveDir Directories="$(SolutionDir)\artifacts\tspublish\dist" />
    <MakeDir Directories="$(SolutionDir)\artifacts\tspublish\dist" />
    <WriteLinesToFile 
      File="$(SolutionDir)\artifacts\tspublish\dist\plugins\.gitkeep" 
    />
  </Target>

  <Target Name="MakeLibDebugTSPublish" AfterTargets="Publish;" Condition="'$(SolutionDir)' == '$(MSBuildThisFileDirectory)' And '$(Configuration)' == 'Debug'">
    <ItemGroup>
      <LibsToBuild Include="$(SolutionDir)\libs\**\*.csproj" />
    </ItemGroup>
    <Exec Command='dotnet publish "%(LibsToBuild.FullPath)" -c Debug -p:TCLI_Verb=build -p:GenerateFullPaths=true -p:SolutionDir="$(SolutionDir)\." -p:TCLI_PackageDir="$(SolutionDir)\libs\%(LibsToBuild.Filename)\" -v m'/>
  </Target>

  <Target Name="DownloadLethalConfig" Condition="!Exists('$(SolutionDir)/libs/LethalConfig/LethalConfig.zip')">
    <Exec
      Command="curl -s -f -L -H 'Accept: application/vnd.github+json' -H 'X-GitHub-Api-Version: 2022-11-28' https://api.github.com/repos/AinaVT/LethalConfig/releases/latest"
      ConsoleToMSBuild="true"
    >
      <Output TaskParameter="ConsoleOutput" PropertyName="LethalConfigReleaseJSON" />
    </Exec>
    <PropertyGroup>
      <LethalConfigAssetURL>$([System.Text.RegularExpressions.Regex]::Match($(LethalConfigReleaseJSON), `https://github\.com/AinaVT/LethalConfig/releases/download/.*\.zip`))</LethalConfigAssetURL>
    </PropertyGroup>
    <Error Text="Could not fetch Lethal Config release asset from GitHub" Condition="'$(LethalConfigAssetURL)' == ''" />
    <DownloadFile
      SourceUrl="$(LethalConfigAssetURL)"
      DestinationFolder="$(SolutionDir)/libs/LethalConfig/"
      DestinationFileName="LethalConfig.zip"
    />  
  </Target>

  <Target Name="FetchLethalConfig" Condition="!Exists('$(SolutionDir)/libs/LethalConfig/LethalConfig.dll')">
    <CallTarget Targets="DownloadLethalConfig;" />
    <MakeDir
      Directories="$(SolutionDir)/libs/LethalConfig/LethalConfigPackage"
    />
    <Unzip
      SourceFiles="$(SolutionDir)/libs/LethalConfig/LethalConfig.zip"
      DestinationFolder="$(SolutionDir)/libs/LethalConfig/LethalConfigPackage"
    />
    <Move
      SourceFiles="$(SolutionDir)/libs/LethalConfig/LethalConfigPackage/plugins/LethalConfig/LethalConfig.dll"
      DestinationFolder="$(SolutionDir)/libs/LethalConfig/"
    />
    <RemoveDir
      Directories="$(SolutionDir)/libs/LethalConfig/LethalConfigPackage"
    />

    <Delete
      Files="$(SolutionDir)/libs/LethalConfig/LethalConfig.zip"
    />
  </Target>

  <Target Name="FetchNeededAssemblies" AfterTargets="AfterClean;" BeforeTargets="BeforeBuild;BeforeRebuild;BeforeCompile;BeforeResolveReference;">
    <CallTarget Targets="FetchLethalConfig" />
  </Target>
  
</Project>
